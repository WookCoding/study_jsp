JSP(Java Server Page)
	HTML을 중심으로 자바와 같이 연동하여 사용하는 웹 언어이다.
	HTML코드 안에 JAVA코드를 작성할 수 있는 언어이다.

서버
	사용자의 요청에 맞는 서비스를 제공해주는 것

	- 요청(request)	: 클라이언트 ===> 서버
	- 응답(response) : 서버 ===> 클라이언트
	
웹(Web)
	페이지 요청과 응답이 일어나는 장소.

웹 서버(http) - 아파치
	사용자의 요청이 정적 데이터인지 동적 데이터인지 판단한다.
	정적 데이터일 경우 이미 준비된 HTML문서를 그대로 응답해주며,
	동적 데이터라면 웹 컨테이너에 요청을 보낸다.

웹 컨테이너(서블릿 컨테이너)
	동적 데이터일 경우 JSP, 서블릿으로 연산 및 제어 그리고 DB까지 접근한다.
	DB에 접근하는 연산을 복잡한 연산이라고 하며, JAVA로 처리한다.
	동적 데이터가 정제된 데이터(정적 데이터)로 완성되면 이를 웹 서버로 전달해준다.

WAS(Web Application Server) - Tomcat
	동적 데이터를 처리할 서블릿을 메모리에 할당하며, 
	web.xml을 참조한 뒤 알맞는 서블릿에 대한 Thread를 생성한다.
	서블릿 요청과 서블릿 응답 객체 생성 후 서블릿에 전달하면, 
	연산 종료 후 메모리에서 해제시킨다.

서블릿(Servlet)
	Java 코드 안에 HTML 코드를 작성할 수 있는 Java 프로그램이다.
	Thread에 의해 서블릿에 있는 service() 메소드가 호출된다.
	전송 방식 요청에 맞게 doGet() 또는 doPost()등의 메소드를 호출한다.
==================================================================================
[계산기 만들기 실습]
1. calc.jsp, Oper.java(서블릿), Calc.java(클래스) 생성
2. calc.jsp에서 input태그로 수식 통채로를 입력받고 action은 Oper서블릿으로 설정해준다.
3. Calc.java 클래스에서 사칙연산 메소드를 정의하고 모두 두 정수를 전달받은 후 int로 리턴해준다.
4. 나눗셈 메소드에서는 분모가 0일 경우를 처리하지 않고 Oper.java 서블릿에서 나눗셈 메소드 사용 시 예외를 처리한다.
5. Oper.java 서블릿에서 전달받은 수식을 분석한 후 사칙연산 연산자에 맞게 Calc.java의 메소드를 호출하여 결과를 응답한다.
6. Oper.java 서블릿에서 calc.jsp로 돌아갈 때에는 calc.jsp가 아닌 calc로 이동할 수 있도록 web.xml에서 servlet을 설정한다.
